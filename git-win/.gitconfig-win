[core]
	# Use CRLF line endings for text files
	autocrlf = true
	# Use Visual Studio Code as our editor
	editor = \"C:\\Users\\SDL\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe\" --wait
	# Enable additional caching of file system
	fscache = true
	# Only mark the .git directory as hidden
	hideDotFiles = dotGitOnly
	# Enable long path (>260 chars) support
	longpaths = true
	# Don't checkout paths which may cause problems on NTFS
	protectNTFS = true
	# Don't print non-ASCII file names in quoted octal notation
	quotePath = off
	# Enable symlink support (needs SeCreateSymbolicLinkPrivilege)
	symlinks = true
	# Enable the built-in file system monitor daemon
	#useBuiltinFSMonitor = true
	# Potential whitespace problems which git diff should highlight
	whitespace = blank-at-eol,space-before-tab,blank-at-eof,cr-at-eol

[credential]
	# Use Git Credential Manager Core
	helper = manager-core
	# Disable usage of WIA (Kerberos/NTLM)
	allowWindowsAuth = false

[diff]
	tool = vscode

[difftool "vscode"]
	cmd = \"C:\\Users\\SDL\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe\" --wait --diff \"$LOCAL\" \"$REMOTE\"

[http]
	# Use the SChannel backend for SSL connections
	sslBackend = schannel
	# Always perform certificate revocation checks
	schannelCheckRevoke = true
	# Don't use any sslCAInfo certificate bundle
	schannelUseSSLCAInfo = false

[ssh]
	# The only difference in Git behaviour between "plink" and "tortoiseplink"
	# is the latter adds the "-batch" parameter to disable all interactive
	# prompts. Plink supports this as well though, and it's actually what we
	# want, as in some scenarios stdin doesn't get properly redirected.
	variant = tortoiseplink

# vim: syntax=gitconfig cc=80 tw=79 ts=4 sw=4 sts=4 noet sr
